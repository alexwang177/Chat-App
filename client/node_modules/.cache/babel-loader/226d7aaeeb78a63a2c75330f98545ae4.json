{"ast":null,"code":"import _slicedToArray from \"/Users/AlexWang1/Desktop/Chat-App/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/AlexWang1/Desktop/Chat-App/client/src/components/Chat/Chat.js\";\nimport React, { useState, useEffect } from 'react';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\nimport './Chat.css';\nimport InfoBar from '../InfoBar/InfoBar';\nlet socket;\n\nconst Chat = ({\n  location\n}) => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        name = _useState2[0],\n        setName = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        room = _useState4[0],\n        setRoom = _useState4[1];\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        messages = _useState6[0],\n        setMessages = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        message = _useState8[0],\n        setMessage = _useState8[1];\n\n  const ENDPOINT = 'localhost:5000';\n  useEffect(() => {\n    const _queryString$parse = queryString.parse(location.search),\n          name = _queryString$parse.name,\n          room = _queryString$parse.room;\n\n    socket = io(ENDPOINT);\n    setName(name);\n    setRoom(room);\n    socket.emit('join', {\n      name,\n      room\n    }, () => {});\n    return () => {\n      socket.emit('disconnect');\n      socket.off();\n    };\n  }, [ENDPOINT, location.search]);\n  useEffect(() => {\n    socket.on('message', message => {\n      setMessages([...messages, message]);\n    });\n  }, [messages]); // function for sending messages\n\n  const sendMessage = event => {\n    event.preventDefault();\n\n    if (message) {\n      socket.emit('sendMessage', message, () => setMessage(''));\n    }\n  };\n\n  console.log(message, messages);\n  return React.createElement(\"div\", {\n    className: \"outerContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(InfoBar, {\n    room: room,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  })));\n};\n\nexport default Chat;","map":{"version":3,"sources":["/Users/AlexWang1/Desktop/Chat-App/client/src/components/Chat/Chat.js"],"names":["React","useState","useEffect","queryString","io","InfoBar","socket","Chat","location","name","setName","room","setRoom","messages","setMessages","message","setMessage","ENDPOINT","parse","search","emit","off","on","sendMessage","event","preventDefault","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,OAAO,YAAP;AACA,OAAOC,OAAP,MAAoB,oBAApB;AAEA,IAAIC,MAAJ;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA,oBACJP,QAAQ,CAAC,EAAD,CADJ;AAAA;AAAA,QACrBQ,IADqB;AAAA,QACfC,OADe;;AAAA,qBAEJT,QAAQ,CAAC,EAAD,CAFJ;AAAA;AAAA,QAErBU,IAFqB;AAAA,QAEfC,OAFe;;AAAA,qBAGIX,QAAQ,CAAC,EAAD,CAHZ;AAAA;AAAA,QAGrBY,QAHqB;AAAA,QAGXC,WAHW;;AAAA,qBAIEb,QAAQ,CAAC,EAAD,CAJV;AAAA;AAAA,QAIrBc,OAJqB;AAAA,QAIZC,UAJY;;AAK3B,QAAMC,QAAQ,GAAG,gBAAjB;AAEAf,EAAAA,SAAS,CAAC,MAAM;AAAA,+BACWC,WAAW,CAACe,KAAZ,CAAkBV,QAAQ,CAACW,MAA3B,CADX;AAAA,UACJV,IADI,sBACJA,IADI;AAAA,UACEE,IADF,sBACEA,IADF;;AAGZL,IAAAA,MAAM,GAAGF,EAAE,CAACa,QAAD,CAAX;AAEAP,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,IAAAA,OAAO,CAACD,IAAD,CAAP;AAEAL,IAAAA,MAAM,CAACc,IAAP,CAAY,MAAZ,EAAoB;AAAEX,MAAAA,IAAF;AAAQE,MAAAA;AAAR,KAApB,EAAoC,MAAM,CAEzC,CAFD;AAIA,WAAO,MAAM;AACTL,MAAAA,MAAM,CAACc,IAAP,CAAY,YAAZ;AACAd,MAAAA,MAAM,CAACe,GAAP;AACH,KAHD;AAKH,GAjBQ,EAiBN,CAACJ,QAAD,EAAWT,QAAQ,CAACW,MAApB,CAjBM,CAAT;AAmBAjB,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,MAAM,CAACgB,EAAP,CAAU,SAAV,EAAsBP,OAAD,IAAa;AAC9BD,MAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAcE,OAAd,CAAD,CAAX;AACH,KAFD;AAGH,GAJQ,EAIN,CAACF,QAAD,CAJM,CAAT,CA1B2B,CAgC3B;;AACA,QAAMU,WAAW,GAAIC,KAAD,IAAW;AAE3BA,IAAAA,KAAK,CAACC,cAAN;;AAEA,QAAGV,OAAH,EAAY;AACRT,MAAAA,MAAM,CAACc,IAAP,CAAY,aAAZ,EAA2BL,OAA3B,EAAoC,MAAMC,UAAU,CAAC,EAAD,CAApD;AACH;AACJ,GAPD;;AASAU,EAAAA,OAAO,CAACC,GAAR,CAAYZ,OAAZ,EAAqBF,QAArB;AAEA,SACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAEF,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADJ;AAYH,CAxDD;;AA0DA,eAAeJ,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\nimport './Chat.css';\nimport InfoBar from '../InfoBar/InfoBar';\n\nlet socket;\n\nconst Chat = ({ location }) => {\n    const[name, setName] = useState('');\n    const[room, setRoom] = useState('');\n    const[messages, setMessages] = useState([]);\n    const[message, setMessage] = useState('');\n    const ENDPOINT = 'localhost:5000';\n\n    useEffect(() => {\n        const { name, room } = queryString.parse(location.search);\n\n        socket = io(ENDPOINT);\n\n        setName(name);\n        setRoom(room);\n\n        socket.emit('join', { name, room }, () => {\n            \n        });\n\n        return () => {\n            socket.emit('disconnect');\n            socket.off();\n        }\n\n    }, [ENDPOINT, location.search]);\n\n    useEffect(() => {\n        socket.on('message', (message) => {\n            setMessages([...messages, message]);\n        })\n    }, [messages]);\n\n    // function for sending messages\n    const sendMessage = (event) => {\n\n        event.preventDefault();\n\n        if(message) {\n            socket.emit('sendMessage', message, () => setMessage(''));\n        }\n    } \n\n    console.log(message, messages);\n\n    return(\n        <div className='outerContainer'>\n            <div className='container'>\n                <InfoBar room={room}/>\n                {/*<input \n                value={message}\n                onChange={(event) => setMessage(event.target.value)}\n                onKeyPress={(event) => event.key === 'Enter' ? sendMessage(event) : null}\n                />*/}\n            </div>\n        </div>\n    )\n}\n\nexport default Chat;"]},"metadata":{},"sourceType":"module"}